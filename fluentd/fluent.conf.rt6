<source>
  @type tail
  @id artifactory_service_tail
  path "#{ENV['ARTIFACTORY_HOME']}/logs/artifactory.log"
  pos_file "#{ENV['ARTIFACTORY_HOME']}/logs/artifactory.log.pos"
  tag jfrog.rt.artifactory.service
  <parse>
      @type multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<timestamp>[^.*]*) \[(?<service_type>[^\]]*)\] \[(?<log_level>[^\]]*)\] (?<class_line_number>.*) -(?<message>.*)$/
      time_key timestamp
      time_format %Y-%m-%d %H:%M:%S,%L
  </parse>
</source>

<source>
  @type tail
  @id artifactory_request_tail
  path "#{ENV['ARTIFACTORY_HOME']}/logs/request.log"
  pos_file "#{ENV['ARTIFACTORY_HOME']}/logs/request.log.pos"
  tag jfrog.rt.artifactory.request
  <parse>
    @type regexp
    expression ^(?<timestamp>[^ ]*)\|(?<trace_id>[^\|]*)\|(?<type>[^\|]*)\|(?<remote_address>[^\|]*)\|(?<username>[^\|]*)\|(?<request_method>[^\|]*)\|(?<request_url>[^\|]*)\|(?<request_user_agent>[^\|]*)\|(?<return_status>[^\|]*)\|(?<request_duration>.+)$
    time_key timestamp
    time_format %Y%m%d%H%M%S
  </parse>
</source>

<source>
  @type tail
  @id artifactory_access_tail
  path "#{ENV['ARTIFACTORY_HOME']}/logs/access.log"
  pos_file "#{ENV['ARTIFACTORY_HOME']}/logs/access.log.pos"
  tag jfrog.rt.artifactory.access
  <parse>
    @type regexp
    expression ^(?<timestamp>[^.*]*) \[(?<action_response>[^\]]*)\] (?<repo_path>.*) for client : (?<username>.+) / (?<ip>.+)$
    time_key timestamp
    time_format %Y-%m-%d %H:%M:%S,%L
  </parse>
</source>


<filter jfrog.**>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    log_source ${tag}
  </record>
</filter>

<filter jfrog.rt.artifactory.request>
  @type record_transformer
  enable_ruby true
  <record>
    repo ${record["request_url"].include?("/api/docker") && !record["request_url"].include?("/api/docker/null") && !record["request_url"].include?("/api/docker/v2") ? (record["request_url"].split('/')[3]) : ("")}
    image ${record["request_url"].include?("/api/docker") && !record["request_url"].include?("/api/docker/null") && !record["request_url"].include?("/api/docker/v2")  ? (record["request_url"].split('/')[5]) : ("")}
  </record>
</filter>
<source>
  @type exec
  tag jfrog.callhome
  command "#{ENV['ARTIFACTORY_HOME']}/fluentd-1.11.0-linux-x86_64/lib/ruby/bin/gem list --local | grep fluent | sed 's/ (/:/g' | sed 's/)//g'  | sed ':a;N;$!ba;s/\n/\t/g'"
  run_interval 1d
  <parse>
    @type ltsv
  </parse>
</source>
<source>
  @type exec
  tag jfrog.callhome
  command /opt/td-agent/embedded/bin/gem list --local | grep fluent | sed 's/ (/:/g' | sed 's/)//g'  | sed ':a;N;$!ba;s/\n/\t/g'
  run_interval 1d
  <parse>
    @type ltsv
  </parse>
</source>
<filter jfrog.callhome>
  @type record_transformer
  renew_record true
  keep_keys 'productId,features'
  enable_ruby true
  <record>
    productId 'jfrogLogAnalytics/v0.1.0'
    features ${return(record.map { |k,v| { "featureId" => (k + ':' + v).to_sym} })}
  </record>
</filter>
<match jfrog.callhome>
  @type http
  endpoint http://localhost:8081/artifactory/api/system/usage
  open_timeout 5
  content_type application/json
  <format>
    @type json
  </format>
  <buffer>
    flush_interval 5s
  </buffer>
</match>

<match jfrog.**>
  @type copy
  <store>
      @type "elasticsearch"
      @id elasticsearch
      host "elasticsearch"
      port 9200
      user "elastic"
      password xxxxxx
      index_name "unified-artifactory"
      include_tag_key true
      type_name "fluentd"
      logstash_format false
  </store>
  <store>
      @type "splunk_hec"
      host "splunk"
      port 8088
      token xxxxxx
      format json
      sourcetype_key "log_source"
      use_fluentd_time false
      flush_interval 10s
      <buffer tag>
        flush_mode interval
        retry_type exponential_backoff
        flush_interval 10s
      </buffer>
      <format>
        @type json
      </format>
  </store>
  <store>
      @type "datadog"
      @id datadog_agent_artifactory
      api_key xxxxxx
      include_tag_key true
      dd_source fluentd
  </store>
</match>